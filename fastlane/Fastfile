# Customise this file, documentation can be found here:
# https://docs.fastlane.tools/actions/
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.60.1"

default_platform :ios

platform :ios do
  before_all do
    cocoapods
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "Car-Connect") # Build your app - more options available
    pilot(skip_waiting_for_build_processing: true)
  end

  desc "Increment the build number and Commit"
  lane :increment do

    increment_build_number

    # Commit and push to remote
    commit_version_bump(
      message: 'Build number bump by fastlane - [ios increment] lane',
      force: true
    )

    push_to_git_remote(
      remote: "origin",         # optional, default: "origin"
      local_branch: "develop",  # optional, aliased by "branch", default: "master"
      remote_branch: "develop", # optional, default is set to local_branch
      tags: false     # optional, default: true
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight, submit for review and release to internal testers"
  desc "This will also make sure the profile is up to date"
  lane :betaInternal do
    increment

    match(type: "appstore") # more information: https://codesigning.guide

    gym(scheme: "Car-Connect", 
    clean: true) # Build your app - more options available

    pilot(distribute_external: false,
      skip_waiting_for_build_processing: true,
      changelog: 'Newest changes, added functionality, bug fixes')
  end

  desc "Submit a new Beta Build to Apple TestFlight, submit for review and release to all testers"
  desc "This will also make sure the profile is up to date"
  lane :betaRelease do
    increment
    match(type: "appstore") # more information: https://codesigning.guide

    gym(scheme: "Car-Connect", 
    clean: true) # Build your app - more options available

    pilot(distribute_external: true,
      groups: ["External"],
    	changelog: 'Newest changes, added functionality, bug fixes')
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    increment_build_number
    match(type: "appstore")
    gym(scheme: "Car-Connect") # Build your app - more options available
    deliver(force: true)
  end

  desc "Deploy Metadata and screenshots from the App Store"
  lane :download_metadata do
    sh 'fastlane deliver download_screenshots --force'
    sh 'fastlane deliver download_metadata --force'
  end

  desc "Upload Metadata to App Store"
  lane :upload_metadata do
    deliver(
      submit_for_review: false,
      force: true,
      metadata_path: "./fastlane/metadata"
    )
  end

  desc "Update version with given type (patch|minor|major). Called as: fastlane bump type:minor"
  lane :bump do |options|
    
    increment_version_number(
      bump_type: "#{options[:type].to_s}"
    )
    
    version = get_version_number(
      target: "Car-Connect"
    )
    increment
    
    deliver(app_version: "#{version}")
  end

  desc "Upload testers file to TestFlight"
  lane :upload_testers do
    sh 'fastlane pilot import -c ./testers.csv'
  end

  desc "Download testers file to TestFlight"
  lane :download_testers do
    sh 'fastlane pilot export -c ./testers.csv'
  end

  lane :shell do
    sh('env')
  end

  desc "Push ./devices.txt to register new devices and create a new profile accordingly"
  lane :deviceRegistration do
  	register_devices(devices_file: "./fastlane/devices.txt")
    match(type: "development", force_for_new_devices: true)
  end

end
